--- ../volatility3.ori/volatility3/framework/plugins/windows/dlllist.py	2023-01-04 09:36:25.073751598 +0000
+++ ../volatility3/volatility3/framework/plugins/windows/dlllist.py.new	2023-01-04 09:47:47.199343526 +0000
@@ -87,7 +87,7 @@
             file_handle = open_method(
                 "{}{}.{:#x}.{:#x}.dmp".format(
                     prefix,
-                    ntpath.basename(name),
+                    ntpath.basename(name).encode("utf8","ignore").decode("ascii","ignore"),
                     dll_entry.vol.offset,
                     dll_entry.DllBase,
                 )
@@ -108,7 +108,7 @@
             OverflowError,
             ValueError,
         ) as excp:
-            vollog.debug(f"Unable to dump dll at offset {dll_entry.DllBase}: {excp}")
+            vollog.debug(f"Unable to dump dll at offset: {excp}")
             return None
         return file_handle
 
@@ -177,23 +177,26 @@
                 except exceptions.InvalidAddressException:
                     size_of_image = renderers.NotAvailableValue()
 
-                yield (
-                    0,
-                    (
-                        proc.UniqueProcessId,
-                        proc.ImageFileName.cast(
-                            "string",
-                            max_length=proc.ImageFileName.vol.count,
-                            errors="replace",
+                try:
+                    yield (
+                        0,
+                        (
+                            proc.UniqueProcessId,
+                            proc.ImageFileName.cast(
+                                "string",
+                                max_length=proc.ImageFileName.vol.count,
+                                errors="replace",
+                            ),
+                            dllbase,
+                            size_of_image,
+                            BaseDllName,
+                            FullDllName,
+                            DllLoadTime,
+                            file_output,
                         ),
-                        dllbase,
-                        size_of_image,
-                        BaseDllName,
-                        FullDllName,
-                        DllLoadTime,
-                        file_output,
-                    ),
-                )
+                    )
+                except:
+                    continue
 
     def generate_timeline(self):
         kernel = self.context.modules[self.config["kernel"]]
